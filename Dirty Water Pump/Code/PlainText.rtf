{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red131\green148\blue149;\red255\green255\blue255;\red61\green73\blue78;
\red17\green134\blue139;\red9\green74\blue76;\red199\green63\blue5;\red52\green62\blue66;\red96\green126\blue3;
}
{\*\expandedcolortbl;;\cssrgb\c58431\c64706\c65098;\cssrgb\c100000\c100000\c100000;\cssrgb\c30588\c35686\c38039;
\cssrgb\c0\c59216\c61569;\cssrgb\c0\c36078\c37255;\cssrgb\c82745\c32941\c0;\cssrgb\c26275\c30980\c32941;\cssrgb\c44706\c55686\c0;
}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 ////////////////////////////\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 //                        // \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 //    JACOB BURGHART &    //\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 //     JOHN ANDERSON      //\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 //  UPDATED JUN 27 2022   // \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 // SCHEMATICS AVAILIBLE   //\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 ////////////////////////////\cf4 \cb1 \strokec4 \
\
\
\
\cf2 \cb3 \strokec2 //pump sucks air at 24 inches\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 //pit overflows at 16 inches\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 const\cf4 \strokec4  \cf5 \strokec5 int\cf4 \strokec4  highLevel = \cf6 \strokec6 18\cf4 \strokec4 ;\cb1 \
\cf5 \cb3 \strokec5 const\cf4 \strokec4  \cf5 \strokec5 int\cf4 \strokec4  lowLevel = \cf6 \strokec6 22\cf4 \strokec4 ;\cb1 \
\cf5 \cb3 \strokec5 const\cf4 \strokec4  \cf5 \strokec5 int\cf4 \strokec4  AlarmHigh = \cf6 \strokec6 5\cf4 \strokec4 ;\cb1 \
\cf5 \cb3 \strokec5 const\cf4 \strokec4  \cf5 \strokec5 int\cf4 \strokec4  AlarmLow = \cf6 \strokec6 30\cf4 \strokec4 ;\cb1 \
\
\cf5 \cb3 \strokec5 long\cf4 \strokec4  Distance;\cf2 \strokec2 // Mulitplier * readUltrasonicDistance\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 float\cf4 \strokec4  Mulitplier = \cf6 \strokec6 0.006783\cf4 \strokec4 ;\cf2 \strokec2  //0.006783\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 // 0.0067 = Micoseconds for sound to travel 1/2 inch; 0.0134 for 1 in\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 const\cf4 \strokec4  \cf5 \strokec5 int\cf4 \strokec4  Alarm = \cf6 \strokec6 12\cf4 \strokec4 ;\cb1 \
\cf5 \cb3 \strokec5 const\cf4 \strokec4  \cf5 \strokec5 int\cf4 \strokec4  cleanWaterPump = \cf6 \strokec6 7\cf4 \strokec4 ;\cf2 \strokec2  //OUTPUT and INPUT; Sensor and pushbutton\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 const\cf4 \strokec4  \cf5 \strokec5 int\cf4 \strokec4  dirtyWaterPump = \cf6 \strokec6 6\cf4 \strokec4 ;\cf2 \strokec2  //OUTPUT and INPUT; Sensor and pushbutton\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 const\cf4 \strokec4  \cf5 \strokec5 int\cf4 \strokec4  overfillWaterSensor = \cf6 \strokec6 5\cf4 \strokec4 ;\cf2 \strokec2  //LED and SENSOR\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 const\cf4 \strokec4  \cf5 \strokec5 int\cf4 \strokec4  lowWaterSensor = \cf6 \strokec6 4\cf4 \strokec4 ;\cf2 \strokec2  //LED and SENSOR\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 const\cf4 \strokec4  \cf5 \strokec5 int\cf4 \strokec4  trigger = \cf6 \strokec6 3\cf4 \strokec4 ;\cb1 \
\cf5 \cb3 \strokec5 const\cf4 \strokec4  \cf5 \strokec5 int\cf4 \strokec4  echo = \cf6 \strokec6 2\cf4 \strokec4 ;\cb1 \
\
\cf5 \cb3 \strokec5 const\cf4 \strokec4  \cf5 \strokec5 long\cf4 \strokec4  lineFlush = \cf6 \strokec6 60000\cf4 \strokec4 ;\cf2 \strokec2  // Time in milliseconds\cf4 \cb1 \strokec4 \
\
\
\cf5 \cb3 \strokec5 long\cf4 \strokec4  \cf7 \strokec7 readUltrasonicDistance\cf8 \strokec8 (\cf5 \strokec5 int\cf4 \strokec4  \cf8 \strokec8 echoPin\cf4 \strokec4 , \cf5 \strokec5 int\cf4 \strokec4  \cf8 \strokec8 triggerPin)\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf8 \cb3 \strokec8 \{\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf7 \strokec7 pinMode\cf8 \strokec8 (\cf4 \strokec4 triggerPin, OUTPUT\cf8 \strokec8 )\cf4 \strokec4 ;\cf2 \strokec2   // Clear the trigger\cf4 \cb1 \strokec4 \
\cb3   \cf7 \strokec7 digitalWrite\cf8 \strokec8 (\cf4 \strokec4 triggerPin, LOW\cf8 \strokec8 )\cf4 \strokec4 ;\cb1 \
\cb3   \cf7 \strokec7 delayMicroseconds\cf8 \strokec8 (\cf6 \strokec6 2\cf8 \strokec8 )\cf4 \strokec4 ;\cf2 \strokec2  // Sets the trigger pin to HIGH state for 10 microseconds\cf4 \cb1 \strokec4 \
\cb3   \cf7 \strokec7 digitalWrite\cf8 \strokec8 (\cf4 \strokec4 triggerPin, HIGH\cf8 \strokec8 )\cf4 \strokec4 ;\cb1 \
\cb3   \cf7 \strokec7 delayMicroseconds\cf8 \strokec8 (\cf6 \strokec6 10\cf8 \strokec8 )\cf4 \strokec4 ;\cb1 \
\cb3   \cf7 \strokec7 digitalWrite\cf8 \strokec8 (\cf4 \strokec4 triggerPin, LOW\cf8 \strokec8 )\cf4 \strokec4 ;\cb1 \
\cb3   \cf7 \strokec7 pinMode\cf8 \strokec8 (\cf4 \strokec4 echoPin, INPUT\cf8 \strokec8 )\cf4 \strokec4 ;\cf2 \strokec2  // Reads the echo pin, and returns the sound wave travel time in microseconds\cf4 \cb1 \strokec4 \
\cb3   \cf9 \strokec9 return\cf4 \strokec4  \cf7 \strokec7 pulseIn\cf8 \strokec8 (\cf4 \strokec4 echoPin, HIGH\cf8 \strokec8 )\cf4 \strokec4 ;\cb1 \
\pard\pardeftab720\partightenfactor0
\cf8 \cb3 \strokec8 \}\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 void\cf4 \strokec4  \cf7 \strokec7 setup\cf8 \strokec8 ()\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf8 \cb3 \strokec8 \{\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf7 \strokec7 pinMode\cf8 \strokec8 (\cf4 \strokec4 cleanWaterPump, OUTPUT\cf8 \strokec8 )\cf4 \strokec4 ;\cf2 \strokec2  // D7\cf4 \cb1 \strokec4 \
\cb3   \cf7 \strokec7 pinMode\cf8 \strokec8 (\cf4 \strokec4 dirtyWaterPump, OUTPUT\cf8 \strokec8 )\cf4 \strokec4 ;\cf2 \strokec2  // D6\cf4 \cb1 \strokec4 \
\cb3   \cf7 \strokec7 pinMode\cf8 \strokec8 (\cf4 \strokec4 overfillWaterSensor, INPUT\cf8 \strokec8 )\cf4 \strokec4 ;\cf2 \strokec2  // D5\cf4 \cb1 \strokec4 \
\cb3   \cf7 \strokec7 pinMode\cf8 \strokec8 (\cf4 \strokec4 lowWaterSensor, INPUT\cf8 \strokec8 )\cf4 \strokec4 ;\cf2 \strokec2  // D4\cf4 \cb1 \strokec4 \
\cb3   \cf7 \strokec7 pinMode\cf8 \strokec8 (\cf4 \strokec4 Alarm, OUTPUT\cf8 \strokec8 )\cf4 \strokec4 ;\cf2 \strokec2  //D12\cf4 \cb1 \strokec4 \
\cb3   \cb1 \
\cb3   \cf7 \strokec7 Serial\cf4 \strokec4 .\cf7 \strokec7 begin\cf8 \strokec8 (\cf6 \strokec6 9600\cf8 \strokec8 )\cf4 \strokec4 ;\cb1 \
\pard\pardeftab720\partightenfactor0
\cf8 \cb3 \strokec8 \}\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 void\cf4 \strokec4  \cf7 \strokec7 loop\cf8 \strokec8 ()\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf8 \cb3 \strokec8 \{\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf7 \strokec7 pinMode\cf8 \strokec8 (\cf4 \strokec4 dirtyWaterPump, INPUT\cf8 \strokec8 )\cf4 \strokec4 ;\cf2 \strokec2  // Read button switch to overide this if statement\cf4 \cb1 \strokec4 \
\cb3   \cb1 \
\cb3   Distance = \cf8 \strokec8 (\cf4 \strokec4 Mulitplier * \cf7 \strokec7 readUltrasonicDistance\cf8 \strokec8 (\cf4 \strokec4 echo, trigger\cf8 \strokec8 ))\cf4 \strokec4 ; \cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2   // RUN IF SYSTEM TRIGGERED AUTOMATICALLY OR MANUALLY AND SENSORS ARE NORMAL (ultrasonic sensor is above high level, & overfill and tank empty sensors are normal, and distance is within expected range, or triggered manually)\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf9 \strokec9 if\cf4 \strokec4  \cf8 \strokec8 ((\cf4 \strokec4 Distance <= highLevel\cf8 \strokec8 )\cf4 \strokec4  && \cf8 \strokec8 (\cf7 \strokec7 digitalRead\cf8 \strokec8 (\cf4 \strokec4 lowWaterSensor\cf8 \strokec8 )\cf4 \strokec4  == HIGH\cf8 \strokec8 )\cf4 \strokec4  && \cf8 \strokec8 (\cf7 \strokec7 digitalRead\cf8 \strokec8 (\cf4 \strokec4 overfillWaterSensor\cf8 \strokec8 )\cf4 \strokec4  == LOW\cf8 \strokec8 )\cf4 \strokec4  && \cf8 \strokec8 (\cf4 \strokec4 Distance >= AlarmHigh\cf8 \strokec8 )\cf4 \strokec4  && \cf8 \strokec8 (\cf4 \strokec4 Distance <= AlarmLow\cf8 \strokec8 )\cf4 \strokec4  || \cf8 \strokec8 ((\cf4 \strokec4 Distance <= lowLevel\cf8 \strokec8 )\cf4 \strokec4  && \cf8 \strokec8 (\cf7 \strokec7 digitalRead\cf8 \strokec8 (\cf4 \strokec4 lowWaterSensor\cf8 \strokec8 )\cf4 \strokec4  == HIGH\cf8 \strokec8 )\cf4 \strokec4  && \cf8 \strokec8 (\cf7 \strokec7 digitalRead\cf8 \strokec8 (\cf4 \strokec4 dirtyWaterPump\cf8 \strokec8 )\cf4 \strokec4  == HIGH\cf8 \strokec8 )\cf4 \strokec4  && \cf8 \strokec8 (\cf4 \strokec4 Distance >= AlarmHigh\cf8 \strokec8 )\cf4 \strokec4  && \cf8 \strokec8 (\cf4 \strokec4 Distance <= AlarmLow\cf8 \strokec8 )\cf4 \strokec4  \cf8 \strokec8 ))\cf4 \strokec4   \cb1 \
\cb3   \cf8 \strokec8 \{\cf4 \strokec4   \cb1 \
\cb3     \cf7 \strokec7 digitalWrite\cf8 \strokec8 (\cf4 \strokec4 Alarm, LOW\cf8 \strokec8 )\cf4 \strokec4 ;\cf2 \strokec2  //reset alarm if triggered\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 pinMode\cf8 \strokec8 (\cf4 \strokec4 dirtyWaterPump, OUTPUT\cf8 \strokec8 )\cf4 \strokec4 ;\cb1 \
\cb3     \cf7 \strokec7 digitalWrite\cf8 \strokec8 (\cf4 \strokec4 dirtyWaterPump, HIGH\cf8 \strokec8 )\cf4 \strokec4 ;\cb1 \
\cb3     \cf7 \strokec7 Serial\cf4 \strokec4 .\cf7 \strokec7 println\cf8 \strokec8 (\cf6 \strokec6 "System normal and emptying, Dirty Pump On"\cf8 \strokec8 )\cf4 \strokec4 ;\cb1 \
\
\cb3     Distance = \cf8 \strokec8 (\cf4 \strokec4 Mulitplier * \cf7 \strokec7 readUltrasonicDistance\cf8 \strokec8 (\cf4 \strokec4 echo, trigger\cf8 \strokec8 ))\cf4 \strokec4 ;\cb1 \
\cb3     \cf9 \strokec9 while\cf4 \strokec4  \cf8 \strokec8 (\cf4 \strokec4 Distance <= lowLevel\cf8 \strokec8 )\cf2 \strokec2   // Run dirty pump till water below low level\cf4 \cb1 \strokec4 \
\cb3     \cf8 \strokec8 \{\cf4 \cb1 \strokec4 \
\cb3       \cf7 \strokec7 delay\cf8 \strokec8 (\cf6 \strokec6 1000\cf8 \strokec8 )\cf4 \strokec4 ;\cf2 \strokec2  // Wait for .2 sec while water is above low level to avoid const sampling\cf4 \cb1 \strokec4 \
\cb3       Distance = \cf8 \strokec8 (\cf4 \strokec4 Mulitplier * \cf7 \strokec7 readUltrasonicDistance\cf8 \strokec8 (\cf4 \strokec4 echo, trigger\cf8 \strokec8 ))\cf4 \strokec4 ;\cb1 \
\cb3       \cf7 \strokec7 Serial\cf4 \strokec4 .\cf7 \strokec7 print\cf8 \strokec8 (\cf6 \strokec6 "NORMAL OPERATION   UPTIME SEC. = "\cf8 \strokec8 )\cf4 \strokec4 ;\cb1 \
\cb3       \cf7 \strokec7 Serial\cf4 \strokec4 .\cf7 \strokec7 println\cf8 \strokec8 (\cf7 \strokec7 millis\cf8 \strokec8 ()\cf4 \strokec4 /\cf6 \strokec6 1000\cf8 \strokec8 )\cf4 \strokec4 ;\cb1 \
\cb3       \cf7 \strokec7 Serial\cf4 \strokec4 .\cf7 \strokec7 println\cf8 \strokec8 (\cf6 \strokec6 "EMPTYING"\cf8 \strokec8 )\cf4 \strokec4 ;\cb1 \
\cb3       \cf7 \strokec7 Serial\cf4 \strokec4 .\cf7 \strokec7 print\cf8 \strokec8 (\cf4 \strokec4 Distance\cf8 \strokec8 )\cf4 \strokec4 ;\cb1 \
\cb3       \cf7 \strokec7 Serial\cf4 \strokec4 .\cf7 \strokec7 println\cf8 \strokec8 (\cf6 \strokec6 " Current measured distance_Normal=5 to 30"\cf8 \strokec8 )\cf4 \strokec4 ;\cb1 \
\cb3       \cf7 \strokec7 Serial\cf4 \strokec4 .\cf7 \strokec7 print\cf8 \strokec8 (\cf6 \strokec6 "Low Cutoff = "\cf8 \strokec8 )\cf4 \strokec4 ;\cb1 \
\cb3       \cf7 \strokec7 Serial\cf4 \strokec4 .\cf7 \strokec7 println\cf8 \strokec8 (\cf4 \strokec4 lowLevel\cf8 \strokec8 )\cf4 \strokec4 ;\cb1 \
\cb3       \cf7 \strokec7 Serial\cf4 \strokec4 .\cf7 \strokec7 print\cf8 \strokec8 (\cf6 \strokec6 "High Trigger = "\cf8 \strokec8 )\cf4 \strokec4 ;\cb1 \
\cb3       \cf7 \strokec7 Serial\cf4 \strokec4 .\cf7 \strokec7 println\cf8 \strokec8 (\cf4 \strokec4 highLevel\cf8 \strokec8 )\cf4 \strokec4 ;\cb1 \
\cb3       \cf7 \strokec7 Serial\cf4 \strokec4 .\cf7 \strokec7 println\cf8 \strokec8 ()\cf4 \strokec4 ;\cb1 \
\
\cb3       \cf9 \strokec9 if\cf4 \strokec4  \cf8 \strokec8 ((\cf4 \strokec4 Distance <= AlarmHigh\cf8 \strokec8 )\cf4 \strokec4  || \cf8 \strokec8 (\cf4 \strokec4 Distance >= AlarmLow\cf8 \strokec8 )\cf4 \strokec4  || \cf8 \strokec8 (\cf7 \strokec7 digitalRead\cf8 \strokec8 (\cf4 \strokec4 lowWaterSensor\cf8 \strokec8 )\cf4 \strokec4  == LOW\cf8 \strokec8 )\cf4 \strokec4  || \cf8 \strokec8 (\cf7 \strokec7 digitalRead\cf8 \strokec8 (\cf4 \strokec4 overfillWaterSensor\cf8 \strokec8 )\cf4 \strokec4  == HIGH\cf8 \strokec8 ))\cf2 \strokec2  //ERROR BREAK\cf4 \cb1 \strokec4 \
\cb3       \cf8 \strokec8 \{\cf4 \cb1 \strokec4 \
\cb3         \cf7 \strokec7 digitalWrite\cf8 \strokec8 (\cf4 \strokec4 Alarm, HIGH\cf8 \strokec8 )\cf4 \strokec4 ;\cb1 \
\cb3         \cf7 \strokec7 Serial\cf4 \strokec4 .\cf7 \strokec7 print\cf8 \strokec8 (\cf4 \strokec4 Distance\cf8 \strokec8 )\cf4 \strokec4 ;\cb1 \
\cb3         \cf7 \strokec7 Serial\cf4 \strokec4 .\cf7 \strokec7 println\cf8 \strokec8 (\cf6 \strokec6 "____Error 0x1____ OUT OF EXPECTED RANGE OR WATER OVERFILL/EMPTY"\cf8 \strokec8 )\cf4 \strokec4 ;\cb1 \
\cb3         \cf9 \strokec9 break\cf4 \strokec4 ;\cb1 \
\cb3       \cf8 \strokec8 \}\cf4 \cb1 \strokec4 \
\cb3     \cf8 \strokec8 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf7 \strokec7 digitalWrite\cf8 \strokec8 (\cf4 \strokec4 dirtyWaterPump, LOW\cf8 \strokec8 )\cf4 \strokec4 ;\cb1 \
\cb3     \cb1 \
\cb3     \cf7 \strokec7 delay\cf8 \strokec8 (\cf6 \strokec6 2000\cf8 \strokec8 )\cf4 \strokec4 ;\cf2 \strokec2  // Wait for 2 sec to avoid water hammer\cf4 \cb1 \strokec4 \
\
\cb3     \cf7 \strokec7 digitalWrite\cf8 \strokec8 (\cf4 \strokec4 cleanWaterPump, HIGH\cf8 \strokec8 )\cf4 \strokec4 ;\cb1 \
\cb3     \cf7 \strokec7 Serial\cf4 \strokec4 .\cf7 \strokec7 println\cf8 \strokec8 (\cf6 \strokec6 "Line flushing"\cf8 \strokec8 )\cf4 \strokec4 ;\cb1 \
\cb3     \cf7 \strokec7 Serial\cf4 \strokec4 .\cf7 \strokec7 println\cf8 \strokec8 ()\cf4 \strokec4 ;\cb1 \
\cb3     \cf7 \strokec7 delay\cf8 \strokec8 (\cf4 \strokec4 lineFlush\cf8 \strokec8 )\cf4 \strokec4 ;\cf2 \strokec2  // Wait for 60 sec to flush line\cf4 \cb1 \strokec4 \
\
\cb3     \cf7 \strokec7 digitalWrite\cf8 \strokec8 (\cf4 \strokec4 cleanWaterPump, LOW\cf8 \strokec8 )\cf4 \strokec4 ;\cb1 \
\cb3     \cb1 \
\cb3     \cf7 \strokec7 delay\cf8 \strokec8 (\cf6 \strokec6 5000\cf8 \strokec8 )\cf4 \strokec4 ;\cf2 \strokec2  // Wait to avoid 1st if statement false water hammer\cf4 \cb1 \strokec4 \
\cb3   \cb1 \
\cb3   \cb1 \
\cb3   \cf8 \strokec8 \}\cf4 \strokec4  \cb1 \
\cb3   \cb1 \
\cb3   \cf9 \strokec9 else\cf2 \strokec2  /////serial outputs during wait///////\cf4 \cb1 \strokec4 \
\cb3   \cf8 \strokec8 \{\cf4 \cb1 \strokec4 \
\cb3     \cf7 \strokec7 delay\cf8 \strokec8 (\cf6 \strokec6 50\cf8 \strokec8 )\cf4 \strokec4 ;\cf2 \strokec2  // Wait for .05s to be responsive\cf4 \cb1 \strokec4 \
\cb3     \cb1 \
\cb3     Distance = \cf8 \strokec8 (\cf4 \strokec4 Mulitplier * \cf7 \strokec7 readUltrasonicDistance\cf8 \strokec8 (\cf4 \strokec4 echo, trigger\cf8 \strokec8 ))\cf4 \strokec4 ;\cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2     // lowWaterSensor or overfillWaterSensor are triggered, Ultrasonic Sensor is unplugged or reading erroneous distances\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     \cf9 \strokec9 if\cf4 \strokec4  \cf8 \strokec8 ((\cf4 \strokec4 Distance <= AlarmHigh\cf8 \strokec8 )\cf4 \strokec4  || \cf8 \strokec8 (\cf4 \strokec4 Distance >= AlarmLow\cf8 \strokec8 )\cf4 \strokec4  || \cf8 \strokec8 (\cf7 \strokec7 digitalRead\cf8 \strokec8 (\cf4 \strokec4 lowWaterSensor\cf8 \strokec8 )\cf4 \strokec4  == LOW\cf8 \strokec8 )\cf4 \strokec4  || \cf8 \strokec8 (\cf7 \strokec7 digitalRead\cf8 \strokec8 (\cf4 \strokec4 overfillWaterSensor\cf8 \strokec8 )\cf4 \strokec4  == HIGH\cf8 \strokec8 ))\cf2 \strokec2 //trigger alarm\cf4 \cb1 \strokec4 \
\cb3     \cf8 \strokec8 \{\cf4 \cb1 \strokec4 \
\cb3       \cf7 \strokec7 digitalWrite\cf8 \strokec8 (\cf4 \strokec4 Alarm, HIGH\cf8 \strokec8 )\cf4 \strokec4 ;\cb1 \
\cb3       \cf7 \strokec7 Serial\cf4 \strokec4 .\cf7 \strokec7 print\cf8 \strokec8 (\cf6 \strokec6 "UPTIME SEC. = "\cf8 \strokec8 )\cf4 \strokec4 ;\cb1 \
\cb3       \cf7 \strokec7 Serial\cf4 \strokec4 .\cf7 \strokec7 println\cf8 \strokec8 (\cf7 \strokec7 millis\cf8 \strokec8 ()\cf4 \strokec4 /\cf6 \strokec6 1000\cf8 \strokec8 )\cf4 \strokec4 ;\cb1 \
\cb3       \cf7 \strokec7 Serial\cf4 \strokec4 .\cf7 \strokec7 println\cf8 \strokec8 (\cf6 \strokec6 "ERROR"\cf8 \strokec8 )\cf4 \strokec4 ;\cb1 \
\cb3       \cf7 \strokec7 Serial\cf4 \strokec4 .\cf7 \strokec7 print\cf8 \strokec8 (\cf4 \strokec4 Distance\cf8 \strokec8 )\cf4 \strokec4 ;\cb1 \
\cb3       \cf7 \strokec7 Serial\cf4 \strokec4 .\cf7 \strokec7 println\cf8 \strokec8 (\cf6 \strokec6 " <<< Current measured distance_Normal=5 to 30"\cf8 \strokec8 )\cf4 \strokec4 ;\cb1 \
\cb3       \cf7 \strokec7 Serial\cf4 \strokec4 .\cf7 \strokec7 print\cf8 \strokec8 (\cf7 \strokec7 digitalRead\cf8 \strokec8 (\cf4 \strokec4 overfillWaterSensor\cf8 \strokec8 ))\cf4 \strokec4 ;\cb1 \
\cb3       \cf7 \strokec7 Serial\cf4 \strokec4 .\cf7 \strokec7 println\cf8 \strokec8 (\cf6 \strokec6 " Overfill Sensor state_Normal=0"\cf8 \strokec8 )\cf4 \strokec4 ;\cb1 \
\cb3       \cf7 \strokec7 Serial\cf4 \strokec4 .\cf7 \strokec7 print\cf8 \strokec8 (\cf7 \strokec7 digitalRead\cf8 \strokec8 (\cf4 \strokec4 lowWaterSensor\cf8 \strokec8 ))\cf4 \strokec4 ;\cb1 \
\cb3       \cf7 \strokec7 Serial\cf4 \strokec4 .\cf7 \strokec7 println\cf8 \strokec8 (\cf6 \strokec6 " Low Water Sensor state_Normal=1"\cf8 \strokec8 )\cf4 \strokec4 ;\cb1 \
\cb3       \cf7 \strokec7 Serial\cf4 \strokec4 .\cf7 \strokec7 println\cf8 \strokec8 ()\cf4 \strokec4 ;\cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2       //alarm range  05 >> 10 << 30\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2       //normal range 24 >> 26 << 28\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf4 \cb3       \cf7 \strokec7 delay\cf8 \strokec8 (\cf6 \strokec6 500\cf8 \strokec8 )\cf4 \strokec4 ;\cb1 \
\cb3     \cf8 \strokec8 \}\cf4 \cb1 \strokec4 \
\cb3     \cf9 \strokec9 else\cf4 \cb1 \strokec4 \
\cb3     \cf8 \strokec8 \{\cf4 \cb1 \strokec4 \
\cb3       \cf9 \strokec9 if\cf4 \strokec4  \cf8 \strokec8 (\cf7 \strokec7 digitalRead\cf8 \strokec8 (\cf4 \strokec4 Alarm\cf8 \strokec8 )\cf4 \strokec4 ==HIGH\cf8 \strokec8 )\cf4 \cb1 \strokec4 \
\cb3         \cf8 \strokec8 \{\cf4 \cb1 \strokec4 \
\cb3           \cf7 \strokec7 digitalWrite\cf8 \strokec8 (\cf4 \strokec4 Alarm, LOW\cf8 \strokec8 )\cf4 \strokec4 ;\cb1 \
\cb3         \cf8 \strokec8 \}\cf4 \cb1 \strokec4 \
\cb3       \cf7 \strokec7 Serial\cf4 \strokec4 .\cf7 \strokec7 print\cf8 \strokec8 (\cf6 \strokec6 "NORMAL OPERATION   UPTIME SEC. = "\cf8 \strokec8 )\cf4 \strokec4 ;\cb1 \
\cb3       \cf7 \strokec7 Serial\cf4 \strokec4 .\cf7 \strokec7 println\cf8 \strokec8 (\cf7 \strokec7 millis\cf8 \strokec8 ()\cf4 \strokec4 /\cf6 \strokec6 1000\cf8 \strokec8 )\cf4 \strokec4 ;\cb1 \
\cb3       \cf7 \strokec7 Serial\cf4 \strokec4 .\cf7 \strokec7 print\cf8 \strokec8 (\cf4 \strokec4 Distance\cf8 \strokec8 )\cf4 \strokec4 ;\cb1 \
\cb3       \cf7 \strokec7 Serial\cf4 \strokec4 .\cf7 \strokec7 println\cf8 \strokec8 (\cf6 \strokec6 " <<< Current measured distance_Normal=5 to 30"\cf8 \strokec8 )\cf4 \strokec4 ;\cb1 \
\cb3       \cf7 \strokec7 Serial\cf4 \strokec4 .\cf7 \strokec7 print\cf8 \strokec8 (\cf7 \strokec7 digitalRead\cf8 \strokec8 (\cf4 \strokec4 overfillWaterSensor\cf8 \strokec8 ))\cf4 \strokec4 ;\cb1 \
\cb3       \cf7 \strokec7 Serial\cf4 \strokec4 .\cf7 \strokec7 println\cf8 \strokec8 (\cf6 \strokec6 " Overfill Sensor state_Normal=0"\cf8 \strokec8 )\cf4 \strokec4 ;\cb1 \
\cb3       \cf7 \strokec7 Serial\cf4 \strokec4 .\cf7 \strokec7 print\cf8 \strokec8 (\cf7 \strokec7 digitalRead\cf8 \strokec8 (\cf4 \strokec4 lowWaterSensor\cf8 \strokec8 ))\cf4 \strokec4 ;\cb1 \
\cb3       \cf7 \strokec7 Serial\cf4 \strokec4 .\cf7 \strokec7 println\cf8 \strokec8 (\cf6 \strokec6 " Low Water Sensor state_Normal=1"\cf8 \strokec8 )\cf4 \strokec4 ;\cb1 \
\cb3       \cf7 \strokec7 Serial\cf4 \strokec4 .\cf7 \strokec7 println\cf8 \strokec8 ()\cf4 \strokec4 ;\cb1 \
\
\cb3       \cf7 \strokec7 delay\cf8 \strokec8 (\cf6 \strokec6 1000\cf8 \strokec8 )\cf4 \strokec4 ;\cb1 \
\cb3     \cf8 \strokec8 \}\cf4 \cb1 \strokec4 \
\cb3   \cf8 \strokec8 \}\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf8 \cb3 \strokec8 \}\cf4 \cb1 \strokec4 \
}